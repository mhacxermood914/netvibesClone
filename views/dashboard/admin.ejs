<div x-data="handleUser" x-effect="datas" class="flex h-screen bg-gray-200 font-roboto">
    <%- include('./layouts/sidebar.ejs') %>
        <div class="flex-1 flex flex-col overflow-hidden">
            <%- include('./layouts/header.ejs') %>
                <main class="flex-1 overflow-x-hidden overflow-y-auto bg-gray-200">
                    <div class="container mx-auto px-6 py-8">
                        <h3 class="text-gray-700 text-3xl font-medium">Manage Users</h3>

                        <div class="mt-8">

                        </div>

                        <div class="flex flex-col mt-8">
                            <div class="mt-3 mb-2 flex flex-col sm:flex-row">
                                <div class="flex">
                                    <div class="relative">
                                        <select
                                            class="appearance-none h-full rounded-l border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none focus:bg-white focus:border-gray-500">
                                            <option>5</option>
                                            <option>10</option>
                                            <option>20</option>
                                        </select>

                                        <div
                                            class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700">
                                            <svg class="fill-current h-4 w-4" xmlns="http://www.w3.org/2000/svg"
                                                viewBox="0 0 20 20">
                                                <path
                                                    d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z" />
                                            </svg>
                                        </div>
                                    </div>


                                </div>

                                <div class="block relative mt-2 sm:mt-0">
                                    <span class="absolute inset-y-0 left-0 flex items-center pl-2">
                                        <svg viewBox="0 0 24 24" class="h-4 w-4 fill-current text-gray-500">
                                            <path
                                                d="M10 4a6 6 0 100 12 6 6 0 000-12zm-8 6a8 8 0 1114.32 4.906l5.387 5.387a1 1 0 01-1.414 1.414l-5.387-5.387A8 8 0 012 10z">
                                            </path>
                                        </svg>
                                    </span>

                                    <input placeholder="Recherche"
                                        class="appearance-none rounded-r rounded-l sm:rounded-l-none border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none" />
                                </div>
                            </div>


                            <div class="-my-2 py-2 overflow-x-auto sm:-mx-6 sm:px-6 lg:-mx-8 lg:px-8">
                                <div
                                    class="align-middle inline-block min-w-full shadow overflow-hidden sm:rounded-lg border-b border-gray-200">
                                    <table class="min-w-full">
                                        <thead>
                                            <tr>
                                                <th
                                                    class="px-6 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider">
                                                    id</th>
                                                <th
                                                    class="px-6 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider">
                                                    email</th>
                                                <th
                                                    class="px-6 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider">
                                                    Password</th>
                                                <th class="px-6 py-3 border-b border-gray-200 bg-gray-50"></th>
                                            </tr>
                                        </thead>

                                        <tbody class="bg-white tbody">
                                            <template x-for="(user, index) in datas" :key="index">
                                                <tr>
                                                    <td class="px-6 py-4 whitespace-no-wrap border-b border-gray-200">
                                                        <div class="flex items-center">
                                                            <div class="ml-4">
                                                                <div x-text="user.id"
                                                                    class="text-sm leading-5 font-medium text-gray-900">
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </td>

                                                    <td class="px-6 py-4 whitespace-no-wrap border-b border-gray-200">
                                                        <div class="flex items-center">
                                                            <div class="ml-4">
                                                                <div x-text="user.email"
                                                                    class="text-sm leading-5 text-gray-500">
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </td>

                                                    <td class="px-6 py-4 whitespace-no-wrap border-b border-gray-200">
                                                        <div x-text="user.password ? user.password : 'L'utilisateur s'est inscrit via
                                                            Google' " class="text-sm leading-5 text-gray-900"></div>
                                                    </td>

                                                    <td
                                                        class="px-6 py-4 whitespace-no-wrap text-right border-b border-gray-200 text-sm leading-5 font-medium">
                                                        <button @click="handleEditModal(user.id)" href="#"
                                                            class="text-indigo-600 hover:text-indigo-900"><span
                                                                class="material-icons">edit</span></button>
                                                        <button @click="deleteUser(JSON.stringify(user.email))"
                                                            class="text-red-600 hover:text-red-900"><span
                                                                class="material-icons">delete</span></button>
                                                    </td>
                                                </tr>
                                            </template>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </main>
        </div>

        <div
            class="modal absolute flex items-center justify-center top-0 h-0 overflow-hidden w-full bg-gray-700 bg-opacity-50 z-10">
            <!-- Modal content -->
            <div class="modal-content w-1/4 p-4 py-6 rounded-md  bg-white">
                <div class="flex justify-end"><span class="close cursor-pointer">&times;</span></div>

                <div>
                    <form @submit.prevent="updateUser" method="post">
                        <div>
                            <label for="" class="block">E-mail</label>
                            <input type="email" name="email" class="w-full border-2 p-2 rounded-md outline-none" />
                            <span class="email-error-message hidden text-red-400"></span>
                        </div>
                        <div>
                            <button @click="showModal = false"
                                class="bg-green-700 text-green-100 text-xl text-medium hover:bg-green-600 w-full p-2.5 rounded-md mt-4 text-white">Annuler</button>
                            <button type="submit" id="register_submit"
                                class="bg-green-700 text-green-100 text-xl text-medium hover:bg-green-600 w-full p-2.5 rounded-md mt-4 text-white">Update</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

</div>

<script>

    const handleUser = () => ({
        sidebarOpen: false,
        showModal: false,
        holdUserId: null,
        datas: [],
        handleEditModal(id) {
            this.holdUserId = id;
            this.showModal = true;
        },
        updateUser() {
            const data = { id: this.holdUserId }
            fetch('http://localhost:8080/api/modify/email', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data),
            })
                .then((response) => {
                    return response.json()
                })
                .then((data) => {
                    location.reload()
                })
                .catch(err => console.error(err));
        },
        deleteUser(email) {
            const data = { email }
            fetch('http://localhost:8080/api/delete/user', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data),
            })
                .then((response) => {
                    return response.json()
                })
                .then((data) => {
                    location.reload()
                })
                .catch(err => console.error(err));
        },
        usersDatas() {

            fetch('http://localhost:8080/api/users')
                .then((response) => {
                    return response.json()
                })
                .then((data) => {
                    this.datas = data.usersList;
                })
                .catch(err => console.error(err));
        }
    });

    // usersDatas()

</script>