<div x-data="handleServices" class="min-h-screen w-full bg-gray-900">
  <div class="max-w-5xl min-w-5xl mx-auto flex flex-col space-y-8 ">
    <div class="text-gray-200 mt-8 mb-20">
      <h2 class="text-5xl font-semibold  mb-4 text-center">Bienvenue sur ZeddVibes</h2>
      <h4 class="text-xl text-center">Ajoutez du contenu a votre Dahsboard en deux etapes:</h4>
    </div>
    <h2 class="text-gray-300 ">1.Personnaliser votre dashboard en choisissant un service</h2>
    <div class="text-gray-300 font-medium space-y-8">
      <div class="grid grid-cols-7">
        <!-- <div class="col-span-2">
          <h2 class="col-span-2 p-4 rounded-sm bg-gray-800">Lifestyle</h2>
        </div> -->
        <div class="col-span-4 space-x-2 -mt-2 space-y-2">
          <template x-for="(service, index) in availableServices" :key="index">

            <button x-text="service" x-on:click="add(service, index)" x-model="selectIndex"
              x-bind:class="selectIndex == index ? 'bg-green-500 text-green-100' : 'bg-gray-800 hover:bg-gray-700' "
              class=" p-4 rounded-sm bg-gray-800 hover:bg-gray-700"></button>
          </template>
        </div>
      </div>
    </div>
    <div class="flex items-center justify-start mt-12">
      <div>
        <button
          class="px-6 py-3 text-green-500 border-2 border-green-500 hover:bg-green-500 hover:text-green-100">Reinitialiser</button>
        <button x-on:click="next"
          class="px-5 py-3 text-green-100 border-2 bg-green-500 border-green-500 hover:bg-green-600 hover:border-green-600">Suivant</button>
      </div>
    </div>
  </div>

  <script>

    function next() {
      location.replace('http://localhost:8080/dashboard')
    }

    const handleServices = () => ({
      availableServices: ['Cinema', 'RSS', 'Weather', 'Exchange', 'Steam', 'Google Maps', 'Youtube', 'Reddit'],
      selectIndex: null,
      next() {
        location.replace('http://localhost:8080/dashboard')
      },
      getCookie(cname){
        let name = cname + "=";
        let decodedCookie = decodeURIComponent(document.cookie);
        let ca = decodedCookie.split(';');
        for (let i = 0; i < ca.length; i++) {
          let c = ca[i];
          while (c.charAt(0) == ' ') {
            c = c.substring(1);
          }
          if (c.indexOf(name) == 0) {
            return c.substring(name.length, c.length);
          }
        }
        return "";
      },
      clearStorage(){
        localStorage.clear()
      },
      async add(selectService, index) {
        this.clearStorage()

        const id = this.getCookie('userId')

        const widget = {
          name:selectService.toLowerCase(),
          userId:id
        }

        this.selectIndex = index;
        
        const res = await fetch('/api/widgets', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(widget),
        })

        console.log({res})

        localStorage.setItem('redirect',true)



        // if (!localStorage.getItem('availablesServices')) {
        //   localStorage.setItem('availablesServices', JSON.stringify({ services: [selectService], widget: [] }));
        //   this.selectIndex = index;
        //   console.log(this.selectIndex)
        // }
      },
      next() {
        if (localStorage.getItem('redirect')) {
          location.replace('http://localhost:8080/dashboard');
        }
      }
    })
  </script>